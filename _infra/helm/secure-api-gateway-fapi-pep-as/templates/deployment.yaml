---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ .Chart.Name }}
    app.kubernetes.io/component: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Chart.Name }}
    app.kubernetes.io/part-of: pingid
    tier: middle
  name: {{ .Chart.Name }}
spec:
  replicas: {{ .Values.deployment.replicas }}
  strategy:
    type: {{ .Values.deployment.strategyType }}
    {{ if eq .Values.deployment.strategyType "RollingUpdate" }}
    rollingUpdate:
      maxSurge: {{ .Values.deployment.rollingUpdate.maxSurge }}
      maxUnavailable: {{ .Values.deployment.rollingUpdate.maxUnavailable }}
    {{ end }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
      app.kubernetes.io/component: {{ .Chart.Name }}
      app.kubernetes.io/instance: {{ .Chart.Name }}
      app.kubernetes.io/part-of: pingid
      tier: middle
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
        app.kubernetes.io/component: {{ .Chart.Name }}
        app.kubernetes.io/instance: {{ .Chart.Name }}
        app.kubernetes.io/part-of: pingid
        tier: middle
    spec:
      affinity:
        {{- toYaml .Values.deployment.affinity | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          image: {{ .Values.deployment.image.repo }}:{{ default .Chart.AppVersion .Values.deployment.image.tag }}
          imagePullPolicy: {{ .Values.deployment.image.imagePullPolicy }}
          ports:
            - containerPort: 8080
          readinessProbe:
            httpGet:
              path: {{ .Values.deployment.readinessProbe.path }}
              port: {{ .Values.deployment.containerPort }}
            periodSeconds: {{ .Values.deployment.readinessProbe.periodSeconds }}
            failureThreshold: {{ .Values.deployment.readinessProbe.failureThreshold }}
            successThreshold: {{ .Values.deployment.readinessProbe.successThreshold }}
            timeoutSeconds: {{ .Values.deployment.readinessProbe.timeoutSeconds }}
          livenessProbe:
            httpGet:
              path: {{ .Values.deployment.livenessProbe.path }}
              port: {{ .Values.deployment.containerPort }}
            initialDelaySeconds: {{ .Values.deployment.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.deployment.livenessProbe.periodSeconds }}
            failureThreshold: {{ .Values.deployment.livenessProbe.failureThreshold }}
            successThreshold: {{ .Values.deployment.livenessProbe.successThreshold }}
            timeoutSeconds: {{ .Values.deployment.livenessProbe.timeoutSeconds }}
          volumeMounts:
            - mountPath: /var/ig/secrets/truststore
              name: new-truststore
              readOnly: true
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: MY_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          envFrom:
            - secretRef:
                name: as-sapig-secrets
            - configMapRef:
                name: as-sapig-deployment-config
            {{ if eq .Values.configmap.cloudType "FIDC" }}
            - configMapRef:
                name: as-sapig-aic-deployment-config
            {{ end }}
          resources:
            {{- toYaml .Values.deployment.resources | nindent 12 }}
      initContainers:
        - name: truststore-init
          image: {{ .Values.deployment.image.repo }}:{{ default .Chart.AppVersion .Values.deployment.image.tag }}
          imagePullPolicy: {{ .Values.deployment.image.imagePullPolicy }}
          command:
            - /home/forgerock/import-pem-certs.sh
          volumeMounts:
            - mountPath: /truststore
              name: new-truststore
            - mountPath: /var/run/secrets/truststore
              name: ig-truststore-pem
          env:
            - name: TRUSTSTORE_PATH
              value: /truststore/igtruststore
            - name: TRUSTSTORE_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: IG_TRUSTSTORE_PASSWORD
                  name: as-sapig-secrets
            - name: IG_PEM_TRUSTSTORE
              value: /var/run/secrets/truststore/ig-truststore.pem
      securityContext:
        runAsGroup: 0
        runAsUser: 11111
      tolerations:
        - effect: NoSchedule
          key: kubernetes.io/arch
          operator: Exists
      volumes:
        - emptyDir: {}
          name: new-truststore
        - name: ig-truststore-pem
          secret:
            optional: false
            secretName: ig-truststore-pem